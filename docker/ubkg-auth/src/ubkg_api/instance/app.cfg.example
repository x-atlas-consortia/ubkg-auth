# SERVER, USERNAME, and PASSWORD are used to connect to a UBKG neo4j instance.
# SERVER is a URI that is passed to the neo4j.Graphdatabase.Driver.
# The format for SERVER depends on the application environment for the neo4j instance:
# 1. If the neo4j instance is running locally, SERVER should be bolt://localhost:7687.
# 2. If the neo4j instance is running in a local Docker container application, SERVER
#    should be in format bolt://localhost:<PORT>, where PORT is the host port that was
#    assigned to container port 7687.
# 3. If the neo4j instance is running in a Docker container that is part of a Docker
#    Compose multi-container application, SERVER should be format bolt://<IMAGE>:7687,
#    where IMAGE is the Docker image name of the container that hosts the neo4j instance.
SERVER='bolt://localhost:4500'
USERNAME='neo4j'
PASSWORD='abcd1234'
# Maximum duration for the execution of timeboxed queries to prevent service timeout, in seconds
# The AWS API gateway timeout is 29 seconds.
TIMEOUT=28

# Large response threshold, as determined by the length of the response (payload).
# Responses with payload sizes that exceed the threshold will be handled in one of the
# following ways:
# 1. If the threshold is 0, then the response will be passed without any additional processing.
# 2. If the threshold is nonzero and S3 redirection is not enabled, the API will return
#    a custom HTTP 413 response.
# 3. If the threshold is nonzero and S3 redirection is enabled, the API will stash the
#    response in a file in an S3 bucket and return a pre-signed URL pointing to the
#    stashed file.
# Setting the threshold to 9.9MB avoids triggering a HTTP 500 from an AWS API Gateway's hard
# 10 MB payload limit
LARGE_RESPONSE_THRESHOLD = 9*(2**20) + 900*(2**10) #9.9Mb

# OPTIONAL AWS credentials for S3 redirection. If there are no "AWS_*" keys, the
# API will return the default HTTP 403 exception.
# https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html
AWS_ACCESS_KEY_ID = 'AWS_ACCESS_KEY_ID'
AWS_SECRET_ACCESS_KEY = 'AWS_SECRET_ACCESS_KEY'
AWS_S3_BUCKET_NAME = 'AWS_S3_BUCKET_NAME'
AWS_S3_OBJECT_PREFIX = 'AWS_S3_OBJECT_PREFIX'
AWS_OBJECT_URL_EXPIRATION_IN_SECS = 60*60 # 1 hour

